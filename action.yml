# The YAML contains definitions of inputs of the composite GitHub Action.
name: Comment to the merged pull request
description: Create a comment to the merged pull request

branding:
  icon: code
  color: blue

inputs:
  github-token:
    description: GitHub token
    required: true
  message:
    description: |-
      The message to be commented to the merged pull request.
      If we use back quotes in the message, we have to escape them.
    required: true
  retry-times:
    description: The number of times to retry the GitHub API request
    required: false
    default: "3"
  retry-interval-seconds:
    description: The interval in seconds between retries
    required: false
    default: "10"

outputs:
  pull-request-number:
    description: The pull request number of the pull request created by the composite GitHub Action
    value: ${{ steps.get_pr_number.outputs.result }}
  pull-request-creator:
    description: The GitHub account name who created the pull request
    value: ${{ steps.get_pr_creator.outputs.result }}

runs:
  using: composite
  steps:
    - name: Get the commit hash of the merged pull request
      id: get_commit_hash
      shell: bash
      run: |
        echo "commit_hash=${{ github.sha }}" >> $GITHUB_OUTPUT
    # Get the pull request number whose pull request contains the commit hash using github-script
    - name: Search the pull request number by the commit hash of the merged pull request
      id: get_pr_number
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.github-token }}
        debug: true
        script: |
          // Retrieve the commit hash from the previous step
          const commit_hash = "${{ steps.get_commit_hash.outputs.commit_hash }}";
          const query = `${commit_hash} type:pr is:merged`;
          const retryTimes = parseInt(${{ inputs.retry-times }});
          // Search for merged pull requests containing the commit hash
          let items;
          for (let attempt = 1; attempt <= retryTimes; attempt++) {
            // Retry the GitHub API request if it fails, as the merged pull request can't be found immediately after the commit is merged
            try {
              // Search the pull request number whose pull request contains the commit hash
              console.log(`Searching for merged pull requests with the query (attempt: ${attempt}): "${query}"`);
              const response = await github.rest.search.issuesAndPullRequests({
                q: `${commit_hash} type:pr is:merged`
              });
              items = response.data.items;
              // If the items are found, not retrying
              if (items && items.length > 0) {
                break;
              }
              else {
                // Show the response data
                console.log(`Can't find the merged pull request. Response data: ${JSON.stringify(response)}`);
              }
            } catch (error) {
              console.error(`Attempt ${attempt} failed with error: ${error.message}`);
              if (attempt === retryTimes) {
                // If the retryTimes is reached, throw an error
                throw new Error(`Failed to find merged pull requests after ${retryTimes} attempts. Search query was: "${query}"`);
              }
            }
            // If the items are not found, retry after the interval
            if (attempt < retryTimes) {
              await new Promise(resolve => setTimeout(resolve, parseInt(${{ inputs.retry-interval-seconds }}) * 1000));
            }
          }
          // Check if the items array is empty or undefined, and throw an error if true
          if (!items || items.length === 0) {
            throw new Error(`No merged pull requests found. Search query was: "${query}"`);
          }
          // Find the first item in the items array that has a number property
          const pr_item = items.find(item => item.number);
          // If no such item exists, throw an error detailing the items that were found
          if (!pr_item) {
            throw new Error(`No merged pull requests found with a number property. Search query was: "${query}", items found: ${JSON.stringify(items)}`);
          }
          // Extract the number property from the found item
          const pr_number = pr_item.number;
          console.log(`The pull request number is ${pr_number} of ${JSON.stringify(pr_item)}`);
          return pr_number;
    # Get the GitHub account name who created the merged pull request by the pull request number
    - name: Get the GitHub account name who created the merged pull request
      id: get_pr_creator
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.github-token }}
        debug: true
        result-encoding: string
        script: |
          const pr_number = "${{ steps.get_pr_number.outputs.result }}";
          const pr = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: pr_number
          });
          const pr_creator = pr.data.user.login;
          console.log(`The GitHub account name who created the merged pull request is ${pr_creator}`);
          return pr_creator;
    # Create a comment to the merged pull request
    - name: Comment to the merged pull request
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.github-token }}
        debug: true
        script: |
          const pr_number = "${{ steps.get_pr_number.outputs.result }}";
          const body = `@${{ steps.get_pr_creator.outputs.result }}\n${{ inputs.message }}`;
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: pr_number,
            body: body
          });
          console.log(`Commented to the pull request ${pr_number}`);
