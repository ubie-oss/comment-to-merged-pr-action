# The YAML contains definitions of inputs of the composite GitHub Action.
name: Comment to the merged pull request
description: Create a comment to the merged pull request

branding:
  icon: code
  color: blue

inputs:
  github-token:
    description: GitHub token
    required: true
  message:
    description: |-
      The message to be commented to the merged pull request.
      If we use back quotes in the message, we have to escape them.
    required: true

outputs:
  pull-request-number:
    description: The pull request number of the pull request created by the composite GitHub Action
    value: ${{ steps.get_pr_number.outputs.result }}
  pull-request-creator:
    description: The GitHub account name who created the pull request
    value: ${{ steps.get_pr_creator.outputs.result }}

runs:
  using: composite
  steps:
    - name: Get the commit hash of the merged pull request
      id: get_commit_hash
      shell: bash
      run: |
        echo "commit_hash=${{ github.sha }}" >> $GITHUB_OUTPUT
    # Get the pull request number whose pull request contains the commit hash using github-script
    - name: Search the pull request number by the commit hash of the merged pull request
      id: get_pr_number
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.github-token }}
        debug: true
        script: |
          // Retrieve the commit hash from the previous step
          const commit_hash = "${{ steps.get_commit_hash.outputs.commit_hash }}";
          // Search for merged pull requests containing the commit hash
          const query = `${commit_hash} type:pr is:merged`;
          console.log(`Searching for merged pull requests with query: "${query}"`)
          const { data: { items } } = await github.rest.search.issuesAndPullRequests({ q: query });
          // Check if any merged pull requests were found
          if (!items || items.length === 0) {
            throw new Error(`No merged pull requests found. Search query was: "${commit_hash} type:pr is:merged"`);
          }
          // Find the first pull request item that has a number property
          const pr_item = items.find(item => item.number);
          if (!pr_item) {
            throw new Error(`No merged pull requests found with a number property. Search query was: "${commit_hash} type:pr is:merged", items found: ${JSON.stringify(items)}`);
          }
          // Extract the pull request number and log it
          const pr_number = pr_item.number;
          console.log(`The pull request number is ${pr_number} of ${JSON.stringify(pr_item)}`);
          // Return the pull request number for use in subsequent steps
          return pr_number;
    # Get the GitHub account name who created the merged pull request by the pull request number
    - name: Get the GitHub account name who created the merged pull request
      id: get_pr_creator
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.github-token }}
        debug: true
        result-encoding: string
        script: |
          const pr_number = "${{ steps.get_pr_number.outputs.result }}";
          const pr = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: pr_number
          });
          const pr_creator = pr.data.user.login;
          console.log(`The GitHub account name who created the merged pull request is ${pr_creator}`);
          return pr_creator;
    # Create a comment to the merged pull request
    - name: Comment to the merged pull request
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.github-token }}
        debug: true
        script: |
          const pr_number = "${{ steps.get_pr_number.outputs.result }}";
          const body = `@${{ steps.get_pr_creator.outputs.result }}\n${{ inputs.message }}`;
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: pr_number,
            body: body
          });
          console.log(`Commented to the pull request ${pr_number}`);
